// Config -----------------------------------
@syntax-hue:          220;
@syntax-saturation:   13%;
@syntax-brightness:   18%;


// Monochrome -----------------------------------
@monochrome:  hsl(@syntax-hue, 14%, 71%); // default text
@monochrome2: hsl(@syntax-hue,  9%, 55%);
@fadegrey:    hsl(@syntax-hue, 10%, 40%); // comments

// Colors -----------------------------------
@cyan:       hsl(175,  47%,  45%); // for built-ins, magic methods, etc.
@orange:     hsl( 29,  54%,  61%); // Class name color in class def and various misc uses (such as the curly braces in f-strings, constants, etc.)
@yellow:     hsl( 39,  67%,  69%); // for class and function/method defs

@blue:       hsl(207,  62%,  45%); // for functions and method names in defs, as well as in calls
@lightblue:  hsl(207,  88%,  75%); // for singletons (None, True, False), numeric literals, and, arithmetic operators

@purple:     hsl(286,  60%,  67%); // for flow control (and imports)
@darkpurple: hsl(259,  37%,  60%); // for function and method arguments (except those highlighted especially as @red1), and all assignment operators

@green:      hsl( 95,  38%,  62%); // for strings
@darkgreen:  hsl(121,  32%,  40%); // for logical operators and comparison operators

@red1:       hsl(355,  65%,  65%); // nice red for important non-reserved variable names like 'self', 'cls', 'file', '__name__', etc.
@red2:       hsl(  5,  48%,  51%); // jarring red for Errors

// Base colors -----------------------------------
@syntax-fg:     @monochrome;
@syntax-bg:     hsl(@syntax-hue, @syntax-saturation, @syntax-brightness);
@syntax-gutter: darken(@syntax-fg, 26%);
@syntax-guide:  fade(@syntax-fg, 15%);
@syntax-accent: hsl(@syntax-hue, 100%, 66% );
